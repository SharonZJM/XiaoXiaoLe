{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        blueSquares: cc.Prefab,\n        greenSquares: cc.Prefab,\n        redSquares: cc.Prefab,\n        yellowSquares: cc.Prefab,\n        squaresSize: cc.Vec2\n    },\n\n    init: function (game) {\n        this.game = game;\n        this.firstFocus = null;\n        this.secondFocus = null;\n    },\n\n    /**\n     * 获取方块大小\n     * @returns {*}\n     */\n    getSquaresRect: function () {\n        return this.squaresSize;\n    },\n\n    /**\n     * 获取方块类型集合\n     */\n    getSquaresTypeList: function () {\n        return [this.blueSquares, this.greenSquares, this.redSquares, this.yellowSquares];\n    },\n\n    /**\n     * 生成地图\n     */\n    generateMap: function (row, col) {\n        this._row = row;\n        this._col = col;\n        this.pairCount = 0;\n        this._maps = [this._row];\n\n        var id = 0;\n        for (var i = 0; i < this._row; i++) {\n            this._maps[i] = [this._col];\n            for (var j = 0; j < this._col; j++) {\n                if ((i * this._row + j) % 2 === 0) {\n                    id = this.createId();\n                }\n                this._maps[i][j] = id;\n            }\n        }\n\n        this.change();\n        this.testMap();\n    },\n\n    /**\n     * 打乱顺序\n     */\n    change: function () {\n        // 临时变量,用来交换两个位置的数据\n        var tempX, tempY, tempM;\n\n        for (var x = 0; x < this._row; x++) {\n            for (var y = 0; y < this._col; y++) {\n                tempX = parseInt(cc.random0To1() * (this._row - 1));\n                tempY = parseInt(cc.random0To1() * (this._col - 1));\n                tempM = this._maps[x][y];\n                this._maps[x][y] = this._maps[tempX][tempY];\n                this._maps[tempX][tempY] = tempM;\n            }\n        }\n    },\n\n    /**\n     * 产生id\n     */\n    createId: function () {\n        var id = this.pairCount % this.getSquaresTypeList().length;\n        this.pairCount += 1;\n        return id;\n    },\n\n    /**\n     * 渲染地图\n     * @param planeNode 地图容器\n     * @param width     地图宽\n     * @param height    地图高\n     */\n    renderMap: function (planeNode, width, height) {\n        this.resetFocus();\n        this.clearAllSquares(planeNode);\n        for (var i = 0; i < this._row; i++) {\n            for (var j = 0; j < this._col; j++) {\n                var arrays = this.getSquaresTypeList();\n                var prefab = arrays[this._maps[i][j]];\n                var child = cc.instantiate(prefab);\n                child.width = this.squaresSize.x;\n                child.height = this.squaresSize.y;\n                planeNode.addChild(child);\n                var x = j * (this.squaresSize.x) + this.squaresSize.x / 2 - width / 2;\n                var y = -i * (this.squaresSize.y) - this.squaresSize.y / 2 + height / 2;\n                child.setPosition(cc.p(x, y));\n\n                var square = child.getComponent('Square');\n                square.init(this.game);\n                square.setId(this._maps[i][j]);\n                square.setMapPlace(i, j);\n            }\n        }\n    },\n\n    /**\n     * 设置当前获得焦点的方块\n     * @param focus\n     */\n    checkABFocus: function (focus) {\n        if(this.secondFocus !== null){ // 清除前两个方块的焦点,使当前方块高亮\n            if(this.secondFocus !== focus && this.firstFocus !== focus){ // 如果当前方块不是第一第二个获得焦点的方块\n                this.firstFocus.clearFocus();\n                this.secondFocus.clearFocus();\n\n                this.resetFocus();\n                this.firstFocus = focus;\n            }\n        } else if (this.firstFocus !== null) { // 如果存在第一个获得焦点的方块,则和当前方块作对比\n            if (this.firstFocus !== focus && this.firstFocus.getId() === focus.getId()) { // 如果两个方块相等,并且不是自己,则两方块消除,并加分\n                this.firstFocus.destorySquare();\n                this.firstFocus = null;\n                this.game.scoreMng.addScore();\n                focus.destorySquare();\n                focus = null;\n                this.addScore();\n            } else { // 如果两个方块不相等,则存储第二个方块\n                if(this.firstFocus !== focus){ // 如果当前方块不是第一个获得焦点的方块\n                    this.secondFocus = focus;\n                }\n            }\n        } else {\n            this.firstFocus = focus; // 如果之前都没操作,则记录第一个方块选中\n        }\n    },\n\n    addScore: function () {\n        this.pairCount -= 1;\n        cc.log('消除一对 +1分');\n        if(this.pairCount === 0){\n            this.game.planeMng.flushPlane();\n        }\n    },\n\n    resetFocus: function () {\n        this.firstFocus = null;\n        this.secondFocus = null;\n    },\n\n    /**\n     * 清空方块\n     */\n    clearAllSquares: function (planeNode) {\n        planeNode.removeAllChildren();\n    },\n\n    /**\n     * 测试地图id顺序\n     */\n    testMap: function () {\n        for (var i = 0; i < this._row; i++) {\n            var line = '';\n            for (var j = 0; j < this._col; j++) {\n                line = line + this._maps[i][j];\n            }\n            cc.log(line);\n            cc.log('');\n        }\n    }\n});\n"
  ]
}