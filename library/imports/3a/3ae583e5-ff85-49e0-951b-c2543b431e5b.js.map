{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC/C,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACzC,IAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACvC,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAE7C,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,gBAAQ,EAAE,YAAY;AACtB,kBAAU,EAAE,cAAc;AAC1B,eAAO,EAAE,WAAW;AACpB,gBAAQ,EAAE,YAAY;AACtB,iBAAS,EAAE,aAAa;KAC3B;;AAED,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,YAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxB,YAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,YAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAE1B,YAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAC/C,UAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;KACrC;;;;;AAKD,oBAAgB,EAAE,0BAAU,MAAM,EAAE;AAChC,YAAI,CAAC,WAAW,GAAG,MAAM,CAAC;AAC1B,gBAAQ,MAAM;AACV,iBAAK,UAAU,CAAC,YAAY;;AACxB,kBAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACvB,oBAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1B,oBAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;AAC3B,oBAAI,CAAC,SAAS,EAAE,CAAC;AACjB,sBAAM;AAAA,AACV,iBAAK,UAAU,CAAC,MAAM;;AAClB,kBAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjB,sBAAM;AAAA,AACV,iBAAK,UAAU,CAAC,QAAQ;;AACpB,kBAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACnB,oBAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,UAAU,EAAE,CAAC;AAC9C,sBAAM;AAAA,AACV,iBAAK,UAAU,CAAC,OAAO;;AACnB,kBAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAClB,oBAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AAC3B,sBAAM;AAAA,AACV;AACI,sBAAM;AAAA,SACb;KACJ;;AAED,aAAS,EAAE,qBAAY;AACnB,YAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC7C;;AAED,gBAAY,EAAE,wBAAY;AACtB,eAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;AAKD,YAAQ,EAAE,oBAAY;AAClB,YAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC3C,YAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,UAAU,EAAE,CAAC;KACjD;;CAEJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var PlaneManager = require('PlaneManager');\nvar SquaresManager = require('SquaresManager');\nvar TimeManager = require('TimeManager');\nvar GameStatus = require('GameStatus');\nvar ScoreManager = require('ScoreManager');\nvar DialogManager = require('DialogManager');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        planeMng: PlaneManager,\n        squaresMng: SquaresManager,\n        timeMng: TimeManager,\n        scoreMng: ScoreManager,\n        dialogMng: DialogManager\n    },\n\n    onLoad: function () {\n        this.squaresMng.init(this);\n        this.planeMng.init(this);\n        this.timeMng.init(this);\n        this.scoreMng.init(this);\n        this.dialogMng.init(this);\n\n        this.switchGameStatus(GameStatus.SHOWSTARTBTN);\n        cc.director.setDisplayStats(true); // 显示fps\n    },\n    \n    /**\n     * 切换游戏状态\n     */\n    switchGameStatus: function (status) {\n        this._gameStatus = status;\n        switch (status) {\n            case GameStatus.SHOWSTARTBTN: // 显示开始按钮，关闭图层，激活当前节点事件监听\n                cc.log('SHOWSTARTBTN');\n                this.scoreMng.setScore(0);\n                this.planeMng.flushPlane();\n                this.startGame();\n                break;\n            case GameStatus.DIALOG: // 弹窗\n                cc.log('DIALOG');\n                break;\n            case GameStatus.GAMEOVER: // 游戏结束\n                cc.log('GAMEOVER');\n                this.dialogMng.getResultDialog().showResult();\n                break;\n            case GameStatus.PLAYING: // 游戏开始，开始计时\n                cc.log('PLAYING');\n                this.timeMng.oneSchedule();\n                break;\n            default:\n                break;\n        }\n    },\n    \n    startGame: function () {\n        this.switchGameStatus(GameStatus.PLAYING);\n    },\n\n    getGameState: function () {\n        return this._gameStatus;\n    },\n\n    /**\n     * 游戏结束\n     */\n    gameOver: function () {\n        this.switchGameStatus(GameStatus.GAMEOVER);\n        this.dialogMng.getResultDialog().showResult();\n    }\n\n});\n"
  ]
}